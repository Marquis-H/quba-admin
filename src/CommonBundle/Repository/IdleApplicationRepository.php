<?php

namespace CommonBundle\Repository;

use CommonBundle\Constants\IdleStatus;
use Doctrine\ORM\QueryBuilder;

/**
 * IdleApplicationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class IdleApplicationRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @return QueryBuilder
     */
    public function getQueryBuilder()
    {
        return $this->createQueryBuilder('q')
            ->orderBy('q.createdAt', 'desc')
            ->addOrderBy('q.topAt', 'desc');
    }

    /**
     * @param $cId
     * @return mixed
     */
    public function findByCategory($cId)
    {
        $result = $this->createQueryBuilder('q')
            ->leftJoin('q.IdleCategory', 'ic')
            ->where('q.status = :status');

        if ($cId != 0) {
            $result = $result
                ->andWhere('ic.id = :cId')
                ->setParameter('cId', $cId);
        }
        $result = $result
            ->setParameter('status', IdleStatus::ONLINE)
            ->orderBy('q.createdAt', 'desc')
            ->addOrderBy('q.topAt', 'desc')
            ->getQuery()
            ->getResult();
        return $result;
    }

    /**
     * @param $cId
     * @param $keyword
     * @param $currentSortOrder
     * @return QueryBuilder|mixed
     */
    public function searchByCategory($cId, $keyword, $currentSortOrder)
    {
        $result = $this->createQueryBuilder('q')
            ->leftJoin('q.IdleCategory', 'ic')
            ->where('q.status = :status')
            ->andWhere('q.title LIKE :title or q.description LIKE :description');

        if ($cId != 0) {
            $result = $result
                ->andWhere('ic.id = :cId')
                ->setParameter('cId', $cId);
        }

        if ($currentSortOrder != "null") {
            $result = $result
                ->orderBy('q.currentCost', $currentSortOrder);
        }
        $result = $result
            ->setParameter('status', IdleStatus::ONLINE)
            ->setParameter('title', "%{$keyword}%")
            ->setParameter('description', "%{$keyword}%")
            ->getQuery()
            ->getResult();
        return $result;
    }
}
